// This file is autogenerated. DO NOT EDIT.

package model

import (
	"context"
	"time"

	"github.com/golang/protobuf/proto"
	"github.com/jxskiss/dbhlp"
	"github.com/jxskiss/errors"
	"github.com/jxskiss/gopkg/v2/sqlutil"
	"gorm.io/gorm"
)

var _ context.Context
var _ time.Time
var _ proto.Message
var _ errors.ErrorGroup
var _ dbhlp.Opt
var _ sqlutil.Bitmap
var _ gorm.DB

type Rental struct {
	Id                int64     `db:"id" gorm:"column:id;primaryKey"`                          // int(11)
	StartDate         time.Time `db:"start_date" gorm:"column:start_date"`                     // date
	EndDate           time.Time `db:"end_date" gorm:"column:end_date"`                         // date
	CustomerId        int       `db:"customer_id" gorm:"column:customer_id"`                   // int(11)
	VehicleTypeId     int       `db:"vehicle_type_id" gorm:"column:vehicle_type_id"`           // int(11)
	FuelOptionId      int       `db:"fuel_option_id" gorm:"column:fuel_option_id"`             // int(11)
	PickupLocationId  int       `db:"pickup_location_id" gorm:"column:pickup_location_id"`     // int(11)
	DropOffLocationId int       `db:"drop_off_location_id" gorm:"column:drop_off_location_id"` // int(11)
}

type RentalList []*Rental

func (p RentalList) ToIdMap() map[int64]*Rental {
	out := make(map[int64]*Rental, len(p))
	for _, x := range p {
		out[x.Id] = x
	}
	return out
}

func (p RentalList) PluckIds() []int64 {
	out := make([]int64, 0, len(p))
	for _, x := range p {
		out = append(out, x.Id)
	}
	return out
}
