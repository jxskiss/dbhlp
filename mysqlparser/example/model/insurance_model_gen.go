// Autogenerated by github.com/jxsiss/dbhlp/mysqlparser/gen/run.
// DO NOT EDIT.

package model

type Insurance struct {
	Id   int64  `db:"id" gorm:"column:id;primaryKey"` // int(11)
	Name string `db:"name" gorm:"column:name"`        // varchar(45)
	Cost string `db:"cost" gorm:"column:cost"`        // decimal(13,2) UNSIGNED
}

type InsuranceList []*Insurance

func (p InsuranceList) ToIdMap() map[int64]*Insurance {
	out := make(map[int64]*Insurance, len(p))
	for _, x := range p {
		out[x.Id] = x
	}
	return out
}

func (p InsuranceList) PluckIds() []int64 {
	out := make([]int64, 0, len(p))
	for _, x := range p {
		out = append(out, x.Id)
	}
	return out
}
