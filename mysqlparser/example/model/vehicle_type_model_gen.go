// Autogenerated by github.com/jxsiss/dbhlp/mysqlparser/gen/run.
// DO NOT EDIT.

package model

type VehicleType struct {
	Id          int64  `db:"id" gorm:"column:id;primaryKey"`          // int(11)
	Name        string `db:"name" gorm:"column:name"`                 // varchar(45)
	RentalValue string `db:"rental_value" gorm:"column:rental_value"` // decimal(13,2) UNSIGNED
}

type VehicleTypeList []*VehicleType

func (p VehicleTypeList) ToIdMap() map[int64]*VehicleType {
	out := make(map[int64]*VehicleType, len(p))
	for _, x := range p {
		out[x.Id] = x
	}
	return out
}

func (p VehicleTypeList) PluckIds() []int64 {
	out := make([]int64, 0, len(p))
	for _, x := range p {
		out = append(out, x.Id)
	}
	return out
}
